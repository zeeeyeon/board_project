name: Deploy to EC2

on:
  push:
    branches:
      - main
      - develop
      - feature/*

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Grant execute permission
        run: chmod +x backend/gradlew

      - name: Spring Boot Build
        run: |
          cd backend
          ./gradlew clean build --no-daemon
          cp build/libs/*.jar .
          cd ..

      - name: Build Docker Image
        run: docker build -t spring-app:latest ./backend

      - name: Push to Docker Hub
        run: |
            echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_ID }}" --password-stdin
            DOCKER_REPO="zeeyeon/board"
            docker tag spring-app:latest $DOCKER_REPO:latest
            docker push $DOCKER_REPO:latest

      - name: Upload project files to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "."
          target: "/home/ubuntu/app"

      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd /home/ubuntu/app

            running_containers=$(docker ps -q | wc -l)

            if [ "$running_containers" -ge 3 ]; then
              docker-compose pull backend
              docker-compose up -d --no-deps backend
            else
              docker-compose pull
              docker-compose up -d
            fi

  stress-test:
    needs: deploy
    runs-on: ubuntu-latest
  
    steps:
      - name: Install hey
        run: sudo apt update && sudo apt install -y hey

      - name: Stress Test
        run: |
          response=$(curl -o /dev/null -s -w "%{http_code}" "https://${{ secrets.EC2_HOST }}")
          if [ "$response" -eq 200 ]; then
            hey -n 1000 -c 100 "https://${{ secrets.EC2_HOST }}"
          else
            echo "Backend not responding, skipping stress test."
            exit 1
          fi

  notify-discord:
    needs: stress-test
    runs-on: ubuntu-latest
  
    steps:
      - name: Discord Notification
        uses: rjstone/discord-webhook-notify@v1
        with:
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}